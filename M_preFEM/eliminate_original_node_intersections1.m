%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Created by Marcus Tan on 12/22/2014
%%% Copyright 2014 University of Illinois at Urbana-Champaign. All rights reserved
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function nodeCoords = eliminate_original_node_intersections(nodeCoords,...
                                                            nurbs,...
                                                            boundary,...
                                                            tolBoundary,...
                                                            tolNode,...                                                        
                                                            maxAttempts,...
                                                            del)                                                    
intNodes = find((abs(nodeCoords(:,1) - boundary.xi) > tolBoundary) ...
          & (abs(nodeCoords(:,1) - boundary.xf) > tolBoundary) ...
          & (abs(nodeCoords(:,2) - boundary.yi) > tolBoundary) ...
          & (abs(nodeCoords(:,2) - boundary.yf) > tolBoundary));

fprintf('checking if original nodes fall on channels \n')
[onNurbs,normals] = nodes_curves_intersect(nodeCoords(intNodes,:), ...
                                           nurbs, ...
                                           tolNode);                  
count = 0;
while (~isempty(onNurbs))
    count = count + 1;
    if (count > maxAttempts)
        warning('failed: some nodes are still on channels')
        break
    end
    warning('some nodes moved at attempt number %i \n', count)
    nodeCoords(intNodes(onNurbs),:) ...
        = move_nodes(nodeCoords(intNodes(onNurbs),:),...
                     del,normals);
 
    fprintf('checking if original nodes fall on channels \n')
    [onNurbs,normals] = nodes_curves_intersect(nodeCoords(intNodes,:), ...
                                                    nurbs, ...
                                                    tolNode);
end
end